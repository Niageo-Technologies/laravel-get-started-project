<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Http\Requests\{{modelPascal}}Request;
use App{{modelFolder}}\{{modelPascal}};
use Exception;

class {{modelPascal}}Controller extends Controller
{
    public function index()
    {
        $data['{{modelCamelPlural}}'] = {{modelPascal}}::latest()->get();
        return view('admin.{{modelSnake}}.index', $data);
    }

    public function create()
    {
        return view('admin.{{modelSnake}}.create');
    }

    public function store({{modelPascal}}Request $request)
    {
        try{
            ${{modelCamel}} = {{modelPascal}}::create($request->all());

            $notification = array(
                'message' => '{{modelTitle}} saved successfully!',
                'alert-type' => 'success'
            );

            return redirect()->route('admin.{{modelKebabPlural}}.index')->with($notification);

        } catch (Exception $e) {
            $notification = array(
                'message' => $e->getMessage(),
                'alert-type' => 'error'
            );

            return redirect()->route('admin.{{modelKebabPlural}}.index')->with($notification);
        }
    }

    public function show({{modelPascal}} ${{modelCamel}})
    {
        //
    }

    public function edit({{modelPascal}} ${{modelCamel}})
    {
        $data['{{modelCamel}}'] = ${{modelCamel}};
        return view('admin.{{modelSnake}}.edit', $data);
    }

    public function update({{modelPascal}}Request $request, {{modelPascal}} ${{modelCamel}})
    {
        try {
            ${{modelCamel}} = ${{modelCamel}}->update($request->all());

            $notification = array(
                'message' => '{{modelTitle}} saved successfully!',
                'alert-type' => 'success'
            );

            return redirect()->route('admin.{{modelKebabPlural}}.index')->with($notification);
        } catch (Exception $e) {
            $notification = array(
                'message' => $e->getMessage(),
                'alert-type' => 'error'
            );
            return redirect()->route('admin.{{modelKebabPlural}}.index')->with($notification);
        }
    }

    public function destroy({{modelPascal}} ${{modelCamel}})
    {
        try{
            {{modelPascal}}::find(${{modelCamel}}->id)->delete();

            $notification = array(
                'message' => '{{modelTitle}} deleted successfully!',
                'alert-type' => 'success'
            );

            return redirect()->route('admin.{{modelKebabPlural}}.index')->with($notification);
        } catch (Exception $e) {
            $notification = array(
                'message' => $e->getMessage(),
                'alert-type' => 'error'
            );
            return redirect()->route('admin.{{modelKebabPlural}}.index')->with($notification);
        }
    }
}
